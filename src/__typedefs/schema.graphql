type AuthPayload {
  userErrors: [UserError!]!
  data: User
}

""" used for creating a new user """
input InputCreatePost {
  title: String!
}

""" used for logging in """
input InputLogin {
  email: String!
  password: String!
}

""" used for creating a new user """
input InputRegisterUser {
  email: String!
  password: String!
}

type Mutation {
  _empty: String

  """ register a new user """
  registerUser(input: InputRegisterUser!): AuthPayload
  createPost(input: InputCreatePost!): PostAuthPayload
}

type Post {
  id: ID!
  title: String!
  createdAt: String!
  user: User!
}

type PostAuthPayload {
  userErrors: [UserError!]!
  data: Post
}

""" a type defining a user's public data """
type PublicUser {
  id: ID
  email: String
}

type Query {
  _empty: String

  """ login as a user """
  loginUser(input: InputLogin!): AuthPayload

  """ get a user's public data"""
  getUser(id: ID!): PublicUser
  posts: [Post!]!
}

""" a type defining a user  """
type User {
  id: ID
  email: String
  token: String
}

type UserError {
  message: String!
}
